{"ast":null,"code":"import axios from \"axios\";\nexport const Api_Host = axios.create({\n  baseURL: 'http://127.0.0.1:8000/api'\n});\n\n// Interceptor para agregar el token a cada solicitud\nApi_Host.interceptors.request.use(config => {\n  const token = localStorage.getItem(\"token\");\n  if (token) {\n    config.headers[\"Authorization\"] = `Token ${token}`;\n  }\n  return config;\n}, error => Promise.reject(error));\n\n// Crear una nueva precotización\nexport const createPreCotizacion = async data => {\n  try {\n    const response = await Api_Host.post('/precotizacion/', data);\n    return response;\n  } catch (error) {\n    console.error(\"❌ Error en createPreCotizacion:\", error);\n    if (error.response) {\n      console.log(\"🔍 Detalles del error:\", error.response.data);\n      throw new Error(JSON.stringify(error.response.data));\n    } else {\n      throw new Error(\"Error en la solicitud. No se recibió respuesta del servidor.\");\n    }\n  }\n};\nexport const createServicioPreCotizacion = data => Api_Host.post('/precotizacionservicio/', data);\nexport const getServicioData = async id => Api_Host.get(`/allServiciosData/${id}/`);","map":{"version":3,"names":["axios","Api_Host","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","error","Promise","reject","createPreCotizacion","data","response","post","console","log","Error","JSON","stringify","createServicioPreCotizacion","getServicioData","id","get"],"sources":["/Users/appletech/Desktop/Inade_frontend/inadereplacement/src/Api/Api.js"],"sourcesContent":["import axios from \"axios\";\n\nexport const Api_Host = axios.create({\n  baseURL: 'http://127.0.0.1:8000/api'\n});\n\n// Interceptor para agregar el token a cada solicitud\nApi_Host.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      config.headers[\"Authorization\"] = `Token ${token}`;\n    }\n    return config;\n  },\n  (error) => Promise.reject(error)\n);\n\n// Crear una nueva precotización\nexport const createPreCotizacion = async (data) => {\n     try {\n       const response = await Api_Host.post('/precotizacion/', data);\n       return response;\n     } catch (error) {\n       console.error(\"❌ Error en createPreCotizacion:\", error);\n       if (error.response) {\n         console.log(\"🔍 Detalles del error:\", error.response.data);\n         throw new Error(JSON.stringify(error.response.data));\n       } else {\n         throw new Error(\"Error en la solicitud. No se recibió respuesta del servidor.\");\n       }\n     }\n   };\n\n   export const createServicioPreCotizacion = (data) => Api_Host.post('/precotizacionservicio/', data);\n\n   export const getServicioData = async (id) => Api_Host.get(`/allServiciosData/${id}/`);"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAM,CAAC;EACnCC,OAAO,EAAE;AACX,CAAC,CAAC;;AAEF;AACAF,QAAQ,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAC9BC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACI,OAAO,CAAC,eAAe,CAAC,GAAG,SAASH,KAAK,EAAE;EACpD;EACA,OAAOD,MAAM;AACf,CAAC,EACAK,KAAK,IAAKC,OAAO,CAACC,MAAM,CAACF,KAAK,CACjC,CAAC;;AAED;AACA,OAAO,MAAMG,mBAAmB,GAAG,MAAOC,IAAI,IAAK;EAC9C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMhB,QAAQ,CAACiB,IAAI,CAAC,iBAAiB,EAAEF,IAAI,CAAC;IAC7D,OAAOC,QAAQ;EACjB,CAAC,CAAC,OAAOL,KAAK,EAAE;IACdO,OAAO,CAACP,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACvD,IAAIA,KAAK,CAACK,QAAQ,EAAE;MAClBE,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAER,KAAK,CAACK,QAAQ,CAACD,IAAI,CAAC;MAC1D,MAAM,IAAIK,KAAK,CAACC,IAAI,CAACC,SAAS,CAACX,KAAK,CAACK,QAAQ,CAACD,IAAI,CAAC,CAAC;IACtD,CAAC,MAAM;MACL,MAAM,IAAIK,KAAK,CAAC,8DAA8D,CAAC;IACjF;EACF;AACF,CAAC;AAED,OAAO,MAAMG,2BAA2B,GAAIR,IAAI,IAAKf,QAAQ,CAACiB,IAAI,CAAC,yBAAyB,EAAEF,IAAI,CAAC;AAEnG,OAAO,MAAMS,eAAe,GAAG,MAAOC,EAAE,IAAKzB,QAAQ,CAAC0B,GAAG,CAAC,qBAAqBD,EAAE,GAAG,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}